/*
* Copyright (c) 2025-present Henri Michelon
*
* This software is released under the MIT License.
* https://opensource.org/licenses/MIT
*/
#include "common.inc.slang"

[[vk::binding(1, 0)]] ConstantBuffer<DataGammaCorrection> data : register(b1, space0);

float4 fragmentMain(VertexOutput input) : SV_TARGET {
    float4 color = inputImage.Sample(samplers[SAMPLER_NEAREST_NEAREST_BORDER_LINEAR], input.uv);
    float depth = depthBuffer.Sample(samplers[SAMPLER_NEAREST_NEAREST_BORDER_LINEAR], input.uv).r;
    if (params.applyBloom == 1) {
        color.rgb += bloomBuffer.Sample(samplers[SAMPLER_NEAREST_NEAREST_BORDER_LINEAR], input.uv).rgb;
    }
    color.rgb = applyExposure(color.rgb, depth, data.exposure);
    return gammaCorrection(color, data.gamma);
}
